{"version":3,"sources":["components/Simulator.js","components/Iphones.js","components/Androids.js","components/Tablets.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Simulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","width","window","innerWidth","height","innerHeight","scale","updateWindowDimensions","bind","assertThisInitialized","console","log","addEventListener","removeEventListener","setState","react_default","a","createElement","className","style","name","transform","src","Component","Iphones","goLeft","windowH","marginLeft","goRight","x","y","url","components_Simulator","onClick","Androids","Tablets","Header","value","handleChange","handleSubmit","event","target","setUrl","preventDefault","onSubmit","type","onChange","App","showAll","renderprops_universal","from","opacity","to","components_Iphones","break","components_Androids","components_Tablets","header","components_Header","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15a22455.chunk.js","sourcesContent":["import React, {Component} from \"react\"\n\nclass Simulator extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n            scale: (window.innerHeight*.6)/this.props.height\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        console.log(this.state.height)\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({\n            width: window.innerWidth,\n            height: window.innerHeight,\n            scale: (window.innerHeight*.6)/this.props.height\n        });\n        console.log(\"Height: \" + this.state.height + \"    scale: \" + this.state.scale)\n    }\n\n    render() {\n        return(\n            <div className=\"simulationContainer\"\n                 style={{\n                     width:  this.props.width * this.state.scale  + \"px\",\n                     height: this.props.height * this.state.scale  + \"px\",\n                 }}>\n                <h3>{this.props.name}</h3>\n                <iframe\n                    style={{\n                        width:  this.props.width + \"px\",\n                        height: this.props.height + \"px\",\n                        transform: \"scale(\" + this.state.scale + \")\"\n                    }}\n                    className={\"simulationScreen\"}\n                    src={this.props.src}/>\n            </div>\n        );\n    }\n}\n\nexport default Simulator;","import React, {Component} from \"react\"\nimport Simulator from \"./Simulator\";\n\nclass Iphones extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            marginLeft: 0,\n            x: 0,\n            y: 0\n        }\n        console.log(this.state.url)\n    }\n\n    goLeft = () => {\n        console.log(this.props.windowH);\n        this.setState({\n            marginLeft: this.state.marginLeft + 50\n        })\n    }\n    goRight= () => {\n        this.setState({\n            marginLeft: this.state.marginLeft-50\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"simulationContent\" style={{marginLeft: this.state.marginLeft}}>\n                <Simulator\n                    windowH={this.props.windowH}\n                    name={\"Iphone 5\"}\n                    width={320}\n                    height={568}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Iphone 6/7/8\"}\n                    width={375}\n                    height={667}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Iphone 6/7/8 Plus\"}\n                    width={414}\n                    height={736}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Iphone X/XS\"}\n                    width={375}\n                    height={812}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Iphone XR/XS Max\"}\n                    width={414}\n                    height={896}\n                    src={this.props.url}/>\n                <button className={\"leftButton navigation\"}\n                        onClick={this.goLeft}>&#8592;</button>\n                <button className={\"rightButton navigation\"}\n                        onClick={this.goRight}>&#8594;\t</button>\n            </div>\n        );\n    }\n}\nexport default Iphones;","import React, {Component} from \"react\"\nimport Simulator from \"./Simulator\";\n\nclass Androids extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            marginLeft: 0\n        }\n    }\n\n    goLeft = () => {\n        console.log(this.props.windowH);\n        this.setState({\n            marginLeft: this.state.marginLeft + 50\n        })\n    }\n    goRight= () => {\n        this.setState({\n            marginLeft: this.state.marginLeft-50\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"simulationContent\" style={{marginLeft: this.state.marginLeft}}>\n                <button className={\"leftButton navigation\"}\n                        onClick={this.goLeft}>&#8592;</button>\n                <button className={\"rightButton navigation\"}\n                        onClick={this.goRight}>&#8594;\t</button>\n                <Simulator\n                    windowH={this.props.windowH}\n                    name={\"Google pixel/pixel XL\"}\n                    width={412}\n                    height={732}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Google 3\"}\n                    width={412}\n                    height={824}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Google 3 XL\"}\n                    width={412}\n                    height={847}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Galaxy S7\"}\n                    width={360}\n                    height={640}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Galaxy Note 5\"}\n                    width={480}\n                    height={853}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Galaxy Note 9\"}\n                    width={360}\n                    height={853}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Galaxy S8-S9+\"}\n                    width={360}\n                    height={740}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"One Plus 3\"}\n                    width={480}\n                    height={853}\n                    src={this.props.url}/>\n            </div>\n        );\n    }\n}\nexport default Androids;","import React, {Component} from \"react\"\nimport Simulator from \"./Simulator\";\n\nclass Tablets extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            marginLeft: 0\n        }\n    }\n\n    goLeft = () => {\n        console.log(this.props.windowH);\n        this.setState({\n            marginLeft: this.state.marginLeft + 50\n        })\n    }\n    goRight= () => {\n        this.setState({\n            marginLeft: this.state.marginLeft-50\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"simulationContent\" style={{marginLeft: this.state.marginLeft}}>\n                <button className={\"leftButton navigation\"}\n                        onClick={this.goLeft}>&#8592;</button>\n                <button className={\"rightButton navigation\"}\n                        onClick={this.goRight}>&#8594;\t</button>\n                <Simulator\n                    windowH={this.props.windowH}\n                    name={\"IPad Pro\"}\n                    width={1024}\n                    height={1366}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"IPad 4/5th Mini\"}\n                    width={768}\n                    height={1024}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Nexus 9\"}\n                    width={768}\n                    height={1024}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Nexus 7\"}\n                    width={600}\n                    height={960}\n                    src={this.props.url}/>\n                <Simulator\n                    name={\"Galaxy Tab 10\"}\n                    width={800}\n                    height={1280}\n                    src={this.props.url}/>\n            </div>\n        );\n    }\n}\nexport default Tablets;","import React, {Component} from \"react\";\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.setState({\n            url: this.state.value\n        });\n        this.props.setUrl(this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <div className=\"header\">\n                <h1 className=\"headerH1\">\n                    Screen Resolution Tester\n                </h1>\n                <p className=\"headerInfo\">\n                    Put your websites address in the textbox below and you can observe and test your project\n                </p>\n                <form onSubmit={this.handleSubmit} className={\"form\"}>\n                    <label>\n                        URL:\n                        <input className={\"inputbox\"} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Go!\" />\n                </form>\n            </div>\n        );\n    }\n}\nexport default Header;","import React, {Component} from 'react';\nimport Iphones from \"./components/Iphones\"\nimport Androids from \"./components/Androids\";\nimport Tablets from \"./components/Tablets\";\nimport Header from \"./components/Header\";\nimport {Spring} from \"react-spring/renderprops-universal\";\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            url: \"\",\n            showAll: false\n        };\n        this.setUrl = this.setUrl.bind(this);\n    }\n\n    setUrl = url => {\n        console.log(\"url: \" + url)\n        this.setState({\n            url: url,\n            showAll: true\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header setUrl={this.setUrl}/>\n                {this.showAll()}\n            </div>\n        );\n    }\n\n    showAll = () => {\n        if ( this.state.showAll ) {\n            return(\n                <Spring\n                    from={{opacity: 0}}\n                    to={{opacity: 1}}>\n                    {props => (\n                        <div style={props} className={\"middle\"}>\n                            <h1 className=\"iphone\">Iphone</h1>\n                            <Iphones url={this.state.url}/>\n                            {this.break(\"Android\")}\n                            <Androids url={this.state.url}/>\n                            {this.break(\"Tablet\")}\n                            <Tablets url={this.state.url}/>\n                        </div>\n                    )}\n                </Spring>\n            )\n        }\n        else{ return null }\n    };\n\n    break = header => {\n        return (\n            <div className={\"break\"}>\n                <h1 className=\"headerH1\">\n                    {header}\n                </h1>\n            </div>\n        )\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}